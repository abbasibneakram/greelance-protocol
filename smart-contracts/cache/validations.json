{
  "version": "3.4",
  "log": [
    {
      "contracts/BaseNFT.sol:Address": {
        "src": "contracts\\BaseNFT.sol:55",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\BaseNFT.sol:162"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\BaseNFT.sol:162"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:BaseNFT": {
        "src": "contracts\\BaseNFT.sol:631",
        "version": {
          "withMetadata": "de1c28d8727a68eba744a2a77adac68c35401ed0f91c8aa445e75da65f85c432",
          "withoutMetadata": "e5912877efd055cb461b1a7f03c09cd0cdaa7f9e28d688725f266f0e04d7801b",
          "linkedWithoutMetadata": "e5912877efd055cb461b1a7f03c09cd0cdaa7f9e28d688725f266f0e04d7801b"
        },
        "inherit": [
          "contracts/BaseNFT.sol:Ownable",
          "contracts/BaseNFT.sol:ERC721URIStorage",
          "contracts/BaseNFT.sol:ERC721Enumerable",
          "contracts/BaseNFT.sol:IERC721Enumerable",
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256,string)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseNFT",
            "src": "contracts\\BaseNFT.sol:632"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:548"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:550"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:552"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:554"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\BaseNFT.sol:503"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BaseNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Context": {
        "src": "contracts\\BaseNFT.sol:186",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC165": {
        "src": "contracts\\BaseNFT.sol:281",
        "inherit": [
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721": {
        "src": "contracts\\BaseNFT.sol:289",
        "version": {
          "withMetadata": "9a879e60292e4014d2e72241179d934a5f8472abcf3f112a031327fc764f82e4",
          "withoutMetadata": "b679fdfc621b7fd91e400f5a78d31524ec4ff478bd5fa9d7cdb57a32f34b38be",
          "linkedWithoutMetadata": "b679fdfc621b7fd91e400f5a78d31524ec4ff478bd5fa9d7cdb57a32f34b38be"
        },
        "inherit": [
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [
          "contracts/BaseNFT.sol:Address",
          "contracts/BaseNFT.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\BaseNFT.sol:305"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721Enumerable": {
        "src": "contracts\\BaseNFT.sol:547",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721Enumerable",
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:548"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:550"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:552"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:554"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721URIStorage": {
        "src": "contracts\\BaseNFT.sol:501",
        "inherit": [
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [
          "contracts/BaseNFT.sol:Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\BaseNFT.sol:503"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC165": {
        "src": "contracts\\BaseNFT.sol:241",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721": {
        "src": "contracts\\BaseNFT.sol:245",
        "inherit": [
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Enumerable": {
        "src": "contracts\\BaseNFT.sol:277",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Metadata": {
        "src": "contracts\\BaseNFT.sol:269",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Receiver": {
        "src": "contracts\\BaseNFT.sol:232",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Ownable": {
        "src": "contracts\\BaseNFT.sol:196",
        "inherit": [
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\BaseNFT.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BaseNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Strings": {
        "src": "contracts\\BaseNFT.sol:4",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Address": {
        "src": "contracts\\CommissionBasedNFT.sol:55",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\CommissionBasedNFT.sol:162"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\CommissionBasedNFT.sol:162"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:CommissionBasedNFT": {
        "src": "contracts\\CommissionBasedNFT.sol:757",
        "version": {
          "withMetadata": "2e13c1da744188c2cbb1e86ecec141a8f1be52b16a1c0e732ab56c3c334e5826",
          "withoutMetadata": "9dae4e2d9b8110fe2e7ff7a9f9045e460990eca0a96165ff0fb4b868ed9965f1",
          "linkedWithoutMetadata": "9dae4e2d9b8110fe2e7ff7a9f9045e460990eca0a96165ff0fb4b868ed9965f1"
        },
        "inherit": [
          "contracts/CommissionBasedNFT.sol:Ownable",
          "contracts/CommissionBasedNFT.sol:ERC721URIStorage",
          "contracts/CommissionBasedNFT.sol:ERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:IERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "bulkMint(address[],uint256[],string[])",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CommissionBasedNFT",
            "src": "contracts\\CommissionBasedNFT.sol:758"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:674"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:676"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:678"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:680"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\CommissionBasedNFT.sol:629"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\CommissionBasedNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Context": {
        "src": "contracts\\CommissionBasedNFT.sol:186",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC165": {
        "src": "contracts\\CommissionBasedNFT.sol:309",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721": {
        "src": "contracts\\CommissionBasedNFT.sol:317",
        "version": {
          "withMetadata": "615214017a60eeb385a4215eafebd3fe391943023733eca42e56406e7125791b",
          "withoutMetadata": "aa2ac9d988d0af5562d4a41bd3568e833a6b3bb6b35a0902885ca59434514f25",
          "linkedWithoutMetadata": "aa2ac9d988d0af5562d4a41bd3568e833a6b3bb6b35a0902885ca59434514f25"
        },
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [
          "contracts/CommissionBasedNFT.sol:Address",
          "contracts/CommissionBasedNFT.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\CommissionBasedNFT.sol:333"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721Enumerable": {
        "src": "contracts\\CommissionBasedNFT.sol:673",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:674"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:676"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:678"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:680"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721URIStorage": {
        "src": "contracts\\CommissionBasedNFT.sol:627",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [
          "contracts/CommissionBasedNFT.sol:Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\CommissionBasedNFT.sol:629"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC165": {
        "src": "contracts\\CommissionBasedNFT.sol:241",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721": {
        "src": "contracts\\CommissionBasedNFT.sol:245",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Enumerable": {
        "src": "contracts\\CommissionBasedNFT.sol:305",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Metadata": {
        "src": "contracts\\CommissionBasedNFT.sol:297",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Receiver": {
        "src": "contracts\\CommissionBasedNFT.sol:232",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Ownable": {
        "src": "contracts\\CommissionBasedNFT.sol:196",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\CommissionBasedNFT.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\CommissionBasedNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Strings": {
        "src": "contracts\\CommissionBasedNFT.sol:4",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Context": {
        "src": "contracts\\Greelance.sol:63",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:ERC20": {
        "src": "contracts\\Greelance.sol:112",
        "version": {
          "withMetadata": "651756c7108e22a389ede73faca2e2be965e9c5511e1c3da7cc65c9c3af0d15d",
          "withoutMetadata": "86e05aa580375d2a4d8837f297671507076e7a07969c6748d4542f0486ee83e4",
          "linkedWithoutMetadata": "86e05aa580375d2a4d8837f297671507076e7a07969c6748d4542f0486ee83e4"
        },
        "inherit": [
          "contracts/Greelance.sol:IERC20Metadata",
          "contracts/Greelance.sol:IERC20",
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\Greelance.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:113"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:115"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:117"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:119"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:120"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Greelance": {
        "src": "contracts\\Greelance.sol:300",
        "version": {
          "withMetadata": "daf8afca24392f1c8a2fc3609b2a6c25948a4aaef10e7a9be1a824b641f2a568",
          "withoutMetadata": "a7f75b91515795096d5ba002b6f60fa11aa052d71dfd0359cf2e4474cf7b3b73",
          "linkedWithoutMetadata": "a7f75b91515795096d5ba002b6f60fa11aa052d71dfd0359cf2e4474cf7b3b73"
        },
        "inherit": [
          "contracts/Greelance.sol:Ownable",
          "contracts/Greelance.sol:ERC20",
          "contracts/Greelance.sol:IERC20Metadata",
          "contracts/Greelance.sol:IERC20",
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "mint()",
          "setMaxSellableAmount(uint256)",
          "removeMaxSellableRestriction()",
          "excludeFromFees(address)",
          "enable24HrsRestriction()",
          "disable24HrsRestriction()",
          "setUniswapPair(address)",
          "isExcludedFromFees(address)",
          "setBuyTaxPercentage(uint256)",
          "setSellTaxPercentage(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greelance",
            "src": "contracts\\Greelance.sol:320"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenMinted",
            "src": "contracts\\Greelance.sol:311"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSellableRestrictionEnabled",
            "src": "contracts\\Greelance.sol:313"
          },
          {
            "kind": "state-variable-assignment",
            "name": "trading24HrsRestrictionEnabled",
            "src": "contracts\\Greelance.sol:314"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:113"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:115"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:117"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:119"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:120"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Greelance.sol:75"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:301"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:303"
            },
            {
              "label": "taxFeeOnBuy",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:305"
            },
            {
              "label": "taxFeeOnSell",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:306"
            },
            {
              "label": "taxCollector",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:308"
            },
            {
              "label": "tradingEnabled",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:310"
            },
            {
              "label": "tokenMinted",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:311"
            },
            {
              "label": "maxSellableAmount",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:312"
            },
            {
              "label": "maxSellableRestrictionEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:313"
            },
            {
              "label": "trading24HrsRestrictionEnabled",
              "offset": 1,
              "slot": "12",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:314"
            },
            {
              "label": "tradingIn24Hours",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:315"
            },
            {
              "label": "lastTradeTime",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:316"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:IERC20": {
        "src": "contracts\\Greelance.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:IERC20Metadata": {
        "src": "contracts\\Greelance.sol:55",
        "inherit": [
          "contracts/Greelance.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Ownable": {
        "src": "contracts\\Greelance.sol:74",
        "inherit": [
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Greelance.sol:82"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Greelance.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:AggregatorInterface": {
        "src": "contracts\\PriceGuranteeStaking.sol:33",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:IERC20": {
        "src": "contracts\\PriceGuranteeStaking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:IUniswapV2Router": {
        "src": "contracts\\PriceGuranteeStaking.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:PriceGuaranteeStaking": {
        "src": "contracts\\PriceGuranteeStaking.sol:46",
        "version": {
          "withMetadata": "e943067c891ccf0726ee9045d9c7e7628a7842eb4674fe9bfdc930177f224132",
          "withoutMetadata": "d0efe2970fa0d4e4835648e335e3633d786df75e15c241fdaf71cfe17cbc752c",
          "linkedWithoutMetadata": "d0efe2970fa0d4e4835648e335e3633d786df75e15c241fdaf71cfe17cbc752c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "setStakingFeePercentage(uint256,uint256)",
          "getEthToUsdValue()",
          "getPriceOfGrlInEth()",
          "calculatePriceOfGrlInUsd()",
          "stakeGrl(uint256,uint256)",
          "unstake(uint256)",
          "getUserStakeCount(address)",
          "getUserStakeDetails(address,uint256)",
          "withdrawGrl()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceGuaranteeStaking",
            "src": "contracts\\PriceGuranteeStaking.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:47"
            },
            {
              "label": "grlTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:48"
            },
            {
              "label": "wethAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:49"
            },
            {
              "label": "uniswapRouterAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:50"
            },
            {
              "label": "ethUsdAggregatorAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:51"
            },
            {
              "label": "totalStakedGrl",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:54"
            },
            {
              "label": "stakingFeePercentage",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:56"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_array(t_struct(Stake)5179_storage)dyn_storage)",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:66"
            },
            {
              "label": "hasUnstaked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Stake)5179_storage)dyn_storage": {
              "label": "struct PriceGuaranteeStaking.Stake[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Stake)5179_storage)dyn_storage)": {
              "label": "mapping(address => struct PriceGuaranteeStaking.Stake[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)5179_storage": {
              "label": "struct PriceGuaranteeStaking.Stake",
              "members": [
                {
                  "label": "durationInDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceInUsd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "amountInUsd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:AggregatorV3Interface": {
        "src": "contracts\\SeedRoundIco.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()",
          "latestAnswer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:ICO": {
        "src": "contracts\\SeedRoundIco.sol:47",
        "version": {
          "withMetadata": "a1d212946a3dab856f63ae2621d141220d2944af4eba93be4bf7e11c7197521e",
          "withoutMetadata": "0ceef4762b5e1d86b72d71b8cddf5ffadbb5afbc7d1254be5ff7a67f0f27ec0d",
          "linkedWithoutMetadata": "0ceef4762b5e1d86b72d71b8cddf5ffadbb5afbc7d1254be5ff7a67f0f27ec0d"
        },
        "inherit": [
          "contracts/SeedRoundIco.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getVestingUserCount(address)",
          "getReleaseableAmount(address)",
          "claimReleasableTokens()",
          "buyWithEth()",
          "buyWithToken(address,uint256)",
          "setVestingDuration(uint256)",
          "setCliffeDuration(uint256)",
          "setPrice(uint256,uint256)",
          "setUsdtPrice(uint256,uint256)",
          "setPhaseDuration(uint256)",
          "setPercentageReleased(uint256)",
          "ethPriceInUSD()",
          "daiPriceInEth()",
          "convertDaiToEth(uint256)",
          "convertEthToUsd(uint256)",
          "startGCO()",
          "grlOfDai(uint256)",
          "grlOfEth(uint256)",
          "getGrlPrice()",
          "withdrawGrl()",
          "withdrawEth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ICO",
            "src": "contracts\\SeedRoundIco.sol:106"
          },
          {
            "kind": "state-variable-assignment",
            "name": "grl",
            "src": "contracts\\SeedRoundIco.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "dai",
            "src": "contracts\\SeedRoundIco.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdt",
            "src": "contracts\\SeedRoundIco.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts\\SeedRoundIco.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ethToUsdPriceFeed",
            "src": "contracts\\SeedRoundIco.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "daiToEthPriceFeed",
            "src": "contracts\\SeedRoundIco.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "totalTokens",
            "src": "contracts\\SeedRoundIco.sol:58"
          },
          {
            "kind": "state-variable-immutable",
            "name": "admin",
            "src": "contracts\\SeedRoundIco.sol:59"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fundReceiver",
            "src": "contracts\\SeedRoundIco.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokensPerPhase",
            "src": "contracts\\SeedRoundIco.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vestDuration",
            "src": "contracts\\SeedRoundIco.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "cliffPeriod",
            "src": "contracts\\SeedRoundIco.sol:67"
          },
          {
            "kind": "state-variable-assignment",
            "name": "slicePeriod",
            "src": "contracts\\SeedRoundIco.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "immediatePercentageReleased",
            "src": "contracts\\SeedRoundIco.sol:69"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\SeedRoundIco.sol:22"
            },
            {
              "label": "grl",
              "offset": 1,
              "slot": "0",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:48"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:49"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:50"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:51"
            },
            {
              "label": "ethToUsdPriceFeed",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorV3Interface)5934",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:53"
            },
            {
              "label": "daiToEthPriceFeed",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(AggregatorV3Interface)5934",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:55"
            },
            {
              "label": "tokensSold",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:60"
            },
            {
              "label": "isGCOStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:61"
            },
            {
              "label": "daiPricePerPhase",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:64"
            },
            {
              "label": "usdtPricePerPhase",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:65"
            },
            {
              "label": "vestDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:66"
            },
            {
              "label": "cliffPeriod",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:67"
            },
            {
              "label": "slicePeriod",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:68"
            },
            {
              "label": "immediatePercentageReleased",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:69"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:71"
            },
            {
              "label": "phaseDuration",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:72"
            },
            {
              "label": "vestedUserDetail",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage))",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:83"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)5934": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)5894": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage))": {
              "label": "mapping(address => mapping(uint256 => struct ICO.VestingSchedule))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage)": {
              "label": "mapping(uint256 => struct ICO.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)6039_storage": {
              "label": "struct ICO.VestingSchedule",
              "members": [
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriodSeconds",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:IERC20": {
        "src": "contracts\\SeedRoundIco.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:ReentrancyGuard": {
        "src": "contracts\\SeedRoundIco.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\SeedRoundIco.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:IERC20": {
        "src": "contracts\\TeamVesting.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:ReentrancyGuard": {
        "src": "contracts\\TeamVesting.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\TeamVesting.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:TeamVesting": {
        "src": "contracts\\TeamVesting.sol:32",
        "version": {
          "withMetadata": "321c9b529413f8c2edc35fe747fd27d04330be897fb9c4b651ec1397722430ae",
          "withoutMetadata": "67303d4e3fadcebad21f20e4d4e808eea30dc60ef0ca8ade8760391fae274708",
          "linkedWithoutMetadata": "67303d4e3fadcebad21f20e4d4e808eea30dc60ef0ca8ade8760391fae274708"
        },
        "inherit": [
          "contracts/TeamVesting.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createVestingSchedule(address,uint256,uint256,uint256,uint256)",
          "getVestingUserCount(address)",
          "getReleaseableAmount(address)",
          "claimReleasableTokens()",
          "withdrawGrl()",
          "withdrawEth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TeamVesting",
            "src": "contracts\\TeamVesting.sol:60"
          },
          {
            "kind": "state-variable-immutable",
            "name": "admin",
            "src": "contracts\\TeamVesting.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\TeamVesting.sol:22"
            },
            {
              "label": "grl",
              "offset": 1,
              "slot": "0",
              "type": "t_contract(IERC20)7277",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:33"
            },
            {
              "label": "vestedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:36"
            },
            {
              "label": "vestedUserDetail",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)7322_storage))",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:48"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)7277": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)7322_storage))": {
              "label": "mapping(address => mapping(uint256 => struct TeamVesting.VestingSchedule))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VestingSchedule)7322_storage)": {
              "label": "mapping(uint256 => struct TeamVesting.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)7322_storage": {
              "label": "struct TeamVesting.VestingSchedule",
              "members": [
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:Context": {
        "src": "contracts\\TestGrl.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:ERC20": {
        "src": "contracts\\TestGrl.sol:178",
        "version": {
          "withMetadata": "69e6bfd530ef6d5978a717f1cdfaae0d16f094361c5d46e1fa47d950e6ae664a",
          "withoutMetadata": "6524d59ca8bd3d3111b2dd1755d7f63455d07131dc3a9f5f47e5c328c35bf09e",
          "linkedWithoutMetadata": "6524d59ca8bd3d3111b2dd1755d7f63455d07131dc3a9f5f47e5c328c35bf09e"
        },
        "inherit": [
          "contracts/TestGrl.sol:IERC20Metadata",
          "contracts/TestGrl.sol:IERC20",
          "contracts/TestGrl.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\TestGrl.sol:194"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:179"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:181"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:183"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:185"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:Greelance": {
        "src": "contracts\\TestGrl.sol:557",
        "version": {
          "withMetadata": "acab2ceba8f355c820227cd0b2df610027e2721bc61c211e93b597acd8c31804",
          "withoutMetadata": "73960d787505ff3fc9d1de4c3bf7de1d67a18d7f88cf4f9ca784522876fad60d",
          "linkedWithoutMetadata": "73960d787505ff3fc9d1de4c3bf7de1d67a18d7f88cf4f9ca784522876fad60d"
        },
        "inherit": [
          "contracts/TestGrl.sol:ERC20",
          "contracts/TestGrl.sol:IERC20Metadata",
          "contracts/TestGrl.sol:IERC20",
          "contracts/TestGrl.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greelance",
            "src": "contracts\\TestGrl.sol:558"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:179"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:181"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:183"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:185"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:IERC20": {
        "src": "contracts\\TestGrl.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:IERC20Metadata": {
        "src": "contracts\\TestGrl.sol:127",
        "inherit": [
          "contracts/TestGrl.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/BaseNFT.sol:Address": {
        "src": "contracts\\BaseNFT.sol:55",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\BaseNFT.sol:162"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\BaseNFT.sol:162"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:BaseNFT": {
        "src": "contracts\\BaseNFT.sol:631",
        "version": {
          "withMetadata": "de1c28d8727a68eba744a2a77adac68c35401ed0f91c8aa445e75da65f85c432",
          "withoutMetadata": "e5912877efd055cb461b1a7f03c09cd0cdaa7f9e28d688725f266f0e04d7801b",
          "linkedWithoutMetadata": "e5912877efd055cb461b1a7f03c09cd0cdaa7f9e28d688725f266f0e04d7801b"
        },
        "inherit": [
          "contracts/BaseNFT.sol:Ownable",
          "contracts/BaseNFT.sol:ERC721URIStorage",
          "contracts/BaseNFT.sol:ERC721Enumerable",
          "contracts/BaseNFT.sol:IERC721Enumerable",
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256,string)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseNFT",
            "src": "contracts\\BaseNFT.sol:632"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:548"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:550"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:552"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:554"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\BaseNFT.sol:503"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BaseNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Context": {
        "src": "contracts\\BaseNFT.sol:186",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC165": {
        "src": "contracts\\BaseNFT.sol:281",
        "inherit": [
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721": {
        "src": "contracts\\BaseNFT.sol:289",
        "version": {
          "withMetadata": "9a879e60292e4014d2e72241179d934a5f8472abcf3f112a031327fc764f82e4",
          "withoutMetadata": "b679fdfc621b7fd91e400f5a78d31524ec4ff478bd5fa9d7cdb57a32f34b38be",
          "linkedWithoutMetadata": "b679fdfc621b7fd91e400f5a78d31524ec4ff478bd5fa9d7cdb57a32f34b38be"
        },
        "inherit": [
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [
          "contracts/BaseNFT.sol:Address",
          "contracts/BaseNFT.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\BaseNFT.sol:305"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721Enumerable": {
        "src": "contracts\\BaseNFT.sol:547",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721Enumerable",
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:548"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:550"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:552"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\BaseNFT.sol:554"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:ERC721URIStorage": {
        "src": "contracts\\BaseNFT.sol:501",
        "inherit": [
          "contracts/BaseNFT.sol:ERC721",
          "contracts/BaseNFT.sol:IERC721Metadata",
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:ERC165",
          "contracts/BaseNFT.sol:IERC165",
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [
          "contracts/BaseNFT.sol:Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:293"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:295"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:299"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:301"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\BaseNFT.sol:303"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\BaseNFT.sol:503"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC165": {
        "src": "contracts\\BaseNFT.sol:241",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721": {
        "src": "contracts\\BaseNFT.sol:245",
        "inherit": [
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Enumerable": {
        "src": "contracts\\BaseNFT.sol:277",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Metadata": {
        "src": "contracts\\BaseNFT.sol:269",
        "inherit": [
          "contracts/BaseNFT.sol:IERC721",
          "contracts/BaseNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:IERC721Receiver": {
        "src": "contracts\\BaseNFT.sol:232",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Ownable": {
        "src": "contracts\\BaseNFT.sol:196",
        "inherit": [
          "contracts/BaseNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\BaseNFT.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BaseNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BaseNFT.sol:Strings": {
        "src": "contracts\\BaseNFT.sol:4",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Address": {
        "src": "contracts\\CommissionBasedNFT.sol:55",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\CommissionBasedNFT.sol:162"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\CommissionBasedNFT.sol:162"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:CommissionBasedNFT": {
        "src": "contracts\\CommissionBasedNFT.sol:757",
        "version": {
          "withMetadata": "2e13c1da744188c2cbb1e86ecec141a8f1be52b16a1c0e732ab56c3c334e5826",
          "withoutMetadata": "9dae4e2d9b8110fe2e7ff7a9f9045e460990eca0a96165ff0fb4b868ed9965f1",
          "linkedWithoutMetadata": "9dae4e2d9b8110fe2e7ff7a9f9045e460990eca0a96165ff0fb4b868ed9965f1"
        },
        "inherit": [
          "contracts/CommissionBasedNFT.sol:Ownable",
          "contracts/CommissionBasedNFT.sol:ERC721URIStorage",
          "contracts/CommissionBasedNFT.sol:ERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:IERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "bulkMint(address[],uint256[],string[])",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CommissionBasedNFT",
            "src": "contracts\\CommissionBasedNFT.sol:758"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:674"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:676"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:678"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:680"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\CommissionBasedNFT.sol:629"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\CommissionBasedNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Context": {
        "src": "contracts\\CommissionBasedNFT.sol:186",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC165": {
        "src": "contracts\\CommissionBasedNFT.sol:309",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721": {
        "src": "contracts\\CommissionBasedNFT.sol:317",
        "version": {
          "withMetadata": "615214017a60eeb385a4215eafebd3fe391943023733eca42e56406e7125791b",
          "withoutMetadata": "aa2ac9d988d0af5562d4a41bd3568e833a6b3bb6b35a0902885ca59434514f25",
          "linkedWithoutMetadata": "aa2ac9d988d0af5562d4a41bd3568e833a6b3bb6b35a0902885ca59434514f25"
        },
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [
          "contracts/CommissionBasedNFT.sol:Address",
          "contracts/CommissionBasedNFT.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\CommissionBasedNFT.sol:333"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721Enumerable": {
        "src": "contracts\\CommissionBasedNFT.sol:673",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721Enumerable",
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:674"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:676"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:678"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\CommissionBasedNFT.sol:680"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:ERC721URIStorage": {
        "src": "contracts\\CommissionBasedNFT.sol:627",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:ERC721",
          "contracts/CommissionBasedNFT.sol:IERC721Metadata",
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:ERC165",
          "contracts/CommissionBasedNFT.sol:IERC165",
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [
          "contracts/CommissionBasedNFT.sol:Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:321"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:323"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:325"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:327"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:329"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\CommissionBasedNFT.sol:331"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\CommissionBasedNFT.sol:629"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC165": {
        "src": "contracts\\CommissionBasedNFT.sol:241",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721": {
        "src": "contracts\\CommissionBasedNFT.sol:245",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Enumerable": {
        "src": "contracts\\CommissionBasedNFT.sol:305",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Metadata": {
        "src": "contracts\\CommissionBasedNFT.sol:297",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:IERC721",
          "contracts/CommissionBasedNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:IERC721Receiver": {
        "src": "contracts\\CommissionBasedNFT.sol:232",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Ownable": {
        "src": "contracts\\CommissionBasedNFT.sol:196",
        "inherit": [
          "contracts/CommissionBasedNFT.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\CommissionBasedNFT.sol:204"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\CommissionBasedNFT.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CommissionBasedNFT.sol:Strings": {
        "src": "contracts\\CommissionBasedNFT.sol:4",
        "version": {
          "withMetadata": "df7ddaeb05330a13d56f2250ea3e1ef33b3ceeda2dbf9dca68058baa4346afd1",
          "withoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f",
          "linkedWithoutMetadata": "50918aecfb797943d937d0779744d7d7415633fa0699c041a24f4a8412fe6a4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Context": {
        "src": "contracts\\Greelance.sol:63",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:ERC20": {
        "src": "contracts\\Greelance.sol:112",
        "version": {
          "withMetadata": "651756c7108e22a389ede73faca2e2be965e9c5511e1c3da7cc65c9c3af0d15d",
          "withoutMetadata": "86e05aa580375d2a4d8837f297671507076e7a07969c6748d4542f0486ee83e4",
          "linkedWithoutMetadata": "86e05aa580375d2a4d8837f297671507076e7a07969c6748d4542f0486ee83e4"
        },
        "inherit": [
          "contracts/Greelance.sol:IERC20Metadata",
          "contracts/Greelance.sol:IERC20",
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\Greelance.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:113"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:115"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:117"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:119"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:120"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Greelance": {
        "src": "contracts\\Greelance.sol:300",
        "version": {
          "withMetadata": "daf8afca24392f1c8a2fc3609b2a6c25948a4aaef10e7a9be1a824b641f2a568",
          "withoutMetadata": "a7f75b91515795096d5ba002b6f60fa11aa052d71dfd0359cf2e4474cf7b3b73",
          "linkedWithoutMetadata": "a7f75b91515795096d5ba002b6f60fa11aa052d71dfd0359cf2e4474cf7b3b73"
        },
        "inherit": [
          "contracts/Greelance.sol:Ownable",
          "contracts/Greelance.sol:ERC20",
          "contracts/Greelance.sol:IERC20Metadata",
          "contracts/Greelance.sol:IERC20",
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "mint()",
          "setMaxSellableAmount(uint256)",
          "removeMaxSellableRestriction()",
          "excludeFromFees(address)",
          "enable24HrsRestriction()",
          "disable24HrsRestriction()",
          "setUniswapPair(address)",
          "isExcludedFromFees(address)",
          "setBuyTaxPercentage(uint256)",
          "setSellTaxPercentage(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greelance",
            "src": "contracts\\Greelance.sol:320"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenMinted",
            "src": "contracts\\Greelance.sol:311"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSellableRestrictionEnabled",
            "src": "contracts\\Greelance.sol:313"
          },
          {
            "kind": "state-variable-assignment",
            "name": "trading24HrsRestrictionEnabled",
            "src": "contracts\\Greelance.sol:314"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:113"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:115"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:117"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:119"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\Greelance.sol:120"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Greelance.sol:75"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:301"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:303"
            },
            {
              "label": "taxFeeOnBuy",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:305"
            },
            {
              "label": "taxFeeOnSell",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:306"
            },
            {
              "label": "taxCollector",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:308"
            },
            {
              "label": "tradingEnabled",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:310"
            },
            {
              "label": "tokenMinted",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:311"
            },
            {
              "label": "maxSellableAmount",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:312"
            },
            {
              "label": "maxSellableRestrictionEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:313"
            },
            {
              "label": "trading24HrsRestrictionEnabled",
              "offset": 1,
              "slot": "12",
              "type": "t_bool",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:314"
            },
            {
              "label": "tradingIn24Hours",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:315"
            },
            {
              "label": "lastTradeTime",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Greelance",
              "src": "contracts\\Greelance.sol:316"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:IERC20": {
        "src": "contracts\\Greelance.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:IERC20Metadata": {
        "src": "contracts\\Greelance.sol:55",
        "inherit": [
          "contracts/Greelance.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Greelance.sol:Ownable": {
        "src": "contracts\\Greelance.sol:74",
        "inherit": [
          "contracts/Greelance.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Greelance.sol:82"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Greelance.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:AggregatorInterface": {
        "src": "contracts\\PriceGuranteeStaking.sol:33",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:IERC20": {
        "src": "contracts\\PriceGuranteeStaking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:IUniswapV2Router": {
        "src": "contracts\\PriceGuranteeStaking.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PriceGuranteeStaking.sol:PriceGuaranteeStaking": {
        "src": "contracts\\PriceGuranteeStaking.sol:46",
        "version": {
          "withMetadata": "e943067c891ccf0726ee9045d9c7e7628a7842eb4674fe9bfdc930177f224132",
          "withoutMetadata": "d0efe2970fa0d4e4835648e335e3633d786df75e15c241fdaf71cfe17cbc752c",
          "linkedWithoutMetadata": "d0efe2970fa0d4e4835648e335e3633d786df75e15c241fdaf71cfe17cbc752c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "setStakingFeePercentage(uint256,uint256)",
          "getEthToUsdValue()",
          "getPriceOfGrlInEth()",
          "calculatePriceOfGrlInUsd()",
          "stakeGrl(uint256,uint256)",
          "unstake(uint256)",
          "getUserStakeCount(address)",
          "getUserStakeDetails(address,uint256)",
          "withdrawGrl()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceGuaranteeStaking",
            "src": "contracts\\PriceGuranteeStaking.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:47"
            },
            {
              "label": "grlTokenAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:48"
            },
            {
              "label": "wethAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:49"
            },
            {
              "label": "uniswapRouterAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:50"
            },
            {
              "label": "ethUsdAggregatorAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:51"
            },
            {
              "label": "totalStakedGrl",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:54"
            },
            {
              "label": "stakingFeePercentage",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:56"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_array(t_struct(Stake)5179_storage)dyn_storage)",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:66"
            },
            {
              "label": "hasUnstaked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "PriceGuaranteeStaking",
              "src": "contracts\\PriceGuranteeStaking.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Stake)5179_storage)dyn_storage": {
              "label": "struct PriceGuaranteeStaking.Stake[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Stake)5179_storage)dyn_storage)": {
              "label": "mapping(address => struct PriceGuaranteeStaking.Stake[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)5179_storage": {
              "label": "struct PriceGuaranteeStaking.Stake",
              "members": [
                {
                  "label": "durationInDays",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceInUsd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "amountInUsd",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:AggregatorV3Interface": {
        "src": "contracts\\SeedRoundIco.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()",
          "latestAnswer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:ICO": {
        "src": "contracts\\SeedRoundIco.sol:47",
        "version": {
          "withMetadata": "a1d212946a3dab856f63ae2621d141220d2944af4eba93be4bf7e11c7197521e",
          "withoutMetadata": "0ceef4762b5e1d86b72d71b8cddf5ffadbb5afbc7d1254be5ff7a67f0f27ec0d",
          "linkedWithoutMetadata": "0ceef4762b5e1d86b72d71b8cddf5ffadbb5afbc7d1254be5ff7a67f0f27ec0d"
        },
        "inherit": [
          "contracts/SeedRoundIco.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getVestingUserCount(address)",
          "getReleaseableAmount(address)",
          "claimReleasableTokens()",
          "buyWithEth()",
          "buyWithToken(address,uint256)",
          "setVestingDuration(uint256)",
          "setCliffeDuration(uint256)",
          "setPrice(uint256,uint256)",
          "setUsdtPrice(uint256,uint256)",
          "setPhaseDuration(uint256)",
          "setPercentageReleased(uint256)",
          "ethPriceInUSD()",
          "daiPriceInEth()",
          "convertDaiToEth(uint256)",
          "convertEthToUsd(uint256)",
          "startGCO()",
          "grlOfDai(uint256)",
          "grlOfEth(uint256)",
          "getGrlPrice()",
          "withdrawGrl()",
          "withdrawEth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ICO",
            "src": "contracts\\SeedRoundIco.sol:106"
          },
          {
            "kind": "state-variable-assignment",
            "name": "grl",
            "src": "contracts\\SeedRoundIco.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "dai",
            "src": "contracts\\SeedRoundIco.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdt",
            "src": "contracts\\SeedRoundIco.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts\\SeedRoundIco.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ethToUsdPriceFeed",
            "src": "contracts\\SeedRoundIco.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "daiToEthPriceFeed",
            "src": "contracts\\SeedRoundIco.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "totalTokens",
            "src": "contracts\\SeedRoundIco.sol:58"
          },
          {
            "kind": "state-variable-immutable",
            "name": "admin",
            "src": "contracts\\SeedRoundIco.sol:59"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fundReceiver",
            "src": "contracts\\SeedRoundIco.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokensPerPhase",
            "src": "contracts\\SeedRoundIco.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vestDuration",
            "src": "contracts\\SeedRoundIco.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "cliffPeriod",
            "src": "contracts\\SeedRoundIco.sol:67"
          },
          {
            "kind": "state-variable-assignment",
            "name": "slicePeriod",
            "src": "contracts\\SeedRoundIco.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "immediatePercentageReleased",
            "src": "contracts\\SeedRoundIco.sol:69"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\SeedRoundIco.sol:22"
            },
            {
              "label": "grl",
              "offset": 1,
              "slot": "0",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:48"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:49"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:50"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)5894",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:51"
            },
            {
              "label": "ethToUsdPriceFeed",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorV3Interface)5934",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:53"
            },
            {
              "label": "daiToEthPriceFeed",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(AggregatorV3Interface)5934",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:55"
            },
            {
              "label": "tokensSold",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:60"
            },
            {
              "label": "isGCOStarted",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:61"
            },
            {
              "label": "daiPricePerPhase",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:64"
            },
            {
              "label": "usdtPricePerPhase",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:65"
            },
            {
              "label": "vestDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:66"
            },
            {
              "label": "cliffPeriod",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:67"
            },
            {
              "label": "slicePeriod",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:68"
            },
            {
              "label": "immediatePercentageReleased",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:69"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:71"
            },
            {
              "label": "phaseDuration",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:72"
            },
            {
              "label": "vestedUserDetail",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage))",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:83"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ICO",
              "src": "contracts\\SeedRoundIco.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)5934": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)5894": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage))": {
              "label": "mapping(address => mapping(uint256 => struct ICO.VestingSchedule))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VestingSchedule)6039_storage)": {
              "label": "mapping(uint256 => struct ICO.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)6039_storage": {
              "label": "struct ICO.VestingSchedule",
              "members": [
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriodSeconds",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:IERC20": {
        "src": "contracts\\SeedRoundIco.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SeedRoundIco.sol:ReentrancyGuard": {
        "src": "contracts\\SeedRoundIco.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\SeedRoundIco.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:IERC20": {
        "src": "contracts\\TeamVesting.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:ReentrancyGuard": {
        "src": "contracts\\TeamVesting.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\TeamVesting.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TeamVesting.sol:TeamVesting": {
        "src": "contracts\\TeamVesting.sol:32",
        "version": {
          "withMetadata": "321c9b529413f8c2edc35fe747fd27d04330be897fb9c4b651ec1397722430ae",
          "withoutMetadata": "67303d4e3fadcebad21f20e4d4e808eea30dc60ef0ca8ade8760391fae274708",
          "linkedWithoutMetadata": "67303d4e3fadcebad21f20e4d4e808eea30dc60ef0ca8ade8760391fae274708"
        },
        "inherit": [
          "contracts/TeamVesting.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createVestingSchedule(address,uint256,uint256,uint256,uint256)",
          "getVestingUserCount(address)",
          "getReleaseableAmount(address)",
          "claimReleasableTokens()",
          "withdrawGrl()",
          "withdrawEth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TeamVesting",
            "src": "contracts\\TeamVesting.sol:60"
          },
          {
            "kind": "state-variable-immutable",
            "name": "admin",
            "src": "contracts\\TeamVesting.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ReentrancyGuard",
              "src": "contracts\\TeamVesting.sol:22"
            },
            {
              "label": "grl",
              "offset": 1,
              "slot": "0",
              "type": "t_contract(IERC20)7278",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:33"
            },
            {
              "label": "vestedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:36"
            },
            {
              "label": "vestedUserDetail",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)7323_storage))",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:48"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TeamVesting",
              "src": "contracts\\TeamVesting.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)7278": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingSchedule)7323_storage))": {
              "label": "mapping(address => mapping(uint256 => struct TeamVesting.VestingSchedule))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VestingSchedule)7323_storage)": {
              "label": "mapping(uint256 => struct TeamVesting.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)7323_storage": {
              "label": "struct TeamVesting.VestingSchedule",
              "members": [
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:Context": {
        "src": "contracts\\TestGrl.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:ERC20": {
        "src": "contracts\\TestGrl.sol:178",
        "version": {
          "withMetadata": "69e6bfd530ef6d5978a717f1cdfaae0d16f094361c5d46e1fa47d950e6ae664a",
          "withoutMetadata": "6524d59ca8bd3d3111b2dd1755d7f63455d07131dc3a9f5f47e5c328c35bf09e",
          "linkedWithoutMetadata": "6524d59ca8bd3d3111b2dd1755d7f63455d07131dc3a9f5f47e5c328c35bf09e"
        },
        "inherit": [
          "contracts/TestGrl.sol:IERC20Metadata",
          "contracts/TestGrl.sol:IERC20",
          "contracts/TestGrl.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\TestGrl.sol:194"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:179"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:181"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:183"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:185"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:Greelance": {
        "src": "contracts\\TestGrl.sol:557",
        "version": {
          "withMetadata": "acab2ceba8f355c820227cd0b2df610027e2721bc61c211e93b597acd8c31804",
          "withoutMetadata": "73960d787505ff3fc9d1de4c3bf7de1d67a18d7f88cf4f9ca784522876fad60d",
          "linkedWithoutMetadata": "73960d787505ff3fc9d1de4c3bf7de1d67a18d7f88cf4f9ca784522876fad60d"
        },
        "inherit": [
          "contracts/TestGrl.sol:ERC20",
          "contracts/TestGrl.sol:IERC20Metadata",
          "contracts/TestGrl.sol:IERC20",
          "contracts/TestGrl.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greelance",
            "src": "contracts\\TestGrl.sol:558"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:179"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:181"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:183"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:185"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\TestGrl.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:IERC20": {
        "src": "contracts\\TestGrl.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TestGrl.sol:IERC20Metadata": {
        "src": "contracts\\TestGrl.sol:127",
        "inherit": [
          "contracts/TestGrl.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}